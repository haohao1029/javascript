function genTable(name, column,) {

    //table
    const tableName = `table-${name}`
    const selectorTableName = `#${tableName}`
    const columnArr = column.split(", ")
    const columnsArr = [];
    for (let i = 0; i < columnArr.length; i++) {
        columnsArr.push({ 'data': columnArr[i] })
    }
    columnsArr.push({ 'data': "id" })


    $(`.${name}`).append(`<table id='${tableName}' class='table-hover table'>
    <thead><tr class='table-primary' id='thead-${name}'></tr></thead>
    <tbody></tbody>
    </table>`);
    //table header
    for (let i = 0; i < columnArr.length; i++) {
        $(`#thead-${name}`).append(`<td>${columnArr[i].toUpperCase()}</td>`)
    }
    $(`#thead-${name}`).append(`<td>ACTION</td>`)




    $(".btn-new").on("click", () => {
        for (let i = 0; i < columnArr.length; i++) {
            console.log($(`#${name}-${columnArr[i]}`).hasClass("default"))
            if ($(`#${name}-${columnArr[i]}`).hasClass("default") == false) {
                $(`#${name}-${columnArr[i]}`).val("")
            }
        }
        $(`#modal-${name}`).modal();
    })


    // DataTable
    $(selectorTableName).DataTable({

        "processing": true,
        "serverSide": true,
        "ajax": "api/" + name,
        "columns": columnsArr,
        "rowCallback": function (row, dtdata, index) {
            let lastCol = $(row).find("td").length - 1
            $(`td:eq(${lastCol})`, row).attr("class", "td-actions")
            $(`td:eq(${lastCol})`, row).html("")
            const showButton = formButton("Show", "primary", dtdata.id);
            const editButton = formButton("Edit", "primary", dtdata.id);
            const deleteButton = formButton("Delete", "danger", dtdata.id);
            const id = dtdata.id;
            showButton.onclick = function () {
                window.location.href = `leads/${id}`;

            }
            editButton.onclick = function () {
                console.log($(`#${name}-id`).val())
                $.ajax({
                    type: "POST",
                    url: "api/form" + name,
                    data: {
                        'id': id,
                        "_csrf_token": _csrf_token
                    },
                    success: function (response) {
                        console.log(response[0].email)

                        console.log(response[0])
                        for (let i = 0; i < columnArr.length; i++) {
                            $(`#${name}-${columnArr[i]}`).val(response[0][columnArr[i]])
                            console.log(columnArr[i])

                        }
                        $('.' + name + '-id').val(response[0].id)
                    }
                });
                $(`#modal-${name}`).modal();
            }
            deleteButton.onclick = function () {
                $.ajax({
                    type: "DELETE",
                    url: "api/" + name,

                    data: {
                        'id': id,
                        "_csrf_token": _csrf_token

                    },
                    success: function (response) {
                    }
                });
                $(selectorTableName).DataTable().ajax.reload()

            }
            $(`td:eq(${lastCol})`, row).append(showButton)
            $(`td:eq(${lastCol})`, row).append(editButton)
            $(`td:eq(${lastCol})`, row).append(deleteButton)
        },

    })
    function formButton(iconName, color, id) {
        let button = document.createElement("button");
        button.setAttribute("type", "button");
        button.setAttribute("rel", "tooltip");
        button.setAttribute("class", "btn btn-" + color);
        button.setAttribute("data-value", id);
        button.setAttribute("style", "margin: 0px 5px");
        button.innerHTML = iconName;
        let div = document.createElement("div");
        return button;
    }
    $(`#form-${name}`).on('submit', (e) => {
        e.preventDefault();
        validateSubmit();
        $(selectorTableName).DataTable().ajax.reload()
        $(`#modal-${name}`).modal('hide');

    })
    const validateSubmit = () => {
        const form = $(`#form-${name}`)[0];
        let data = new FormData(form);
        data.append("_csrf_token", _csrf_token)
        console.log(data)
        for (let value of data.values()) {
            console.log(value);
        }
        let mode;
        $(`#${name}-id`).val() != "" || null ? mode = "edit" : mode = "new"
        $.ajax({
            method: "POST",
            url: `api/${mode}${name}`,
            data: data,
            processData: false,
            cache: false,
            enctype: "multipart/form-data",
            contentType: false,
            success: function (response) {
                console.log(response)
            }
        });
    }
}

